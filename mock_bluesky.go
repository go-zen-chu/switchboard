// Code generated by MockGen. DO NOT EDIT.
// Source: bluesky.go
//
// Generated by this command:
//
//	mockgen -source=bluesky.go -destination=mock_bluesky.go -package=switchboard
//

// Package switchboard is a generated GoMock package.
package switchboard

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBlueskyClient is a mock of BlueskyClient interface.
type MockBlueskyClient struct {
	ctrl     *gomock.Controller
	recorder *MockBlueskyClientMockRecorder
	isgomock struct{}
}

// MockBlueskyClientMockRecorder is the mock recorder for MockBlueskyClient.
type MockBlueskyClientMockRecorder struct {
	mock *MockBlueskyClient
}

// NewMockBlueskyClient creates a new mock instance.
func NewMockBlueskyClient(ctrl *gomock.Controller) *MockBlueskyClient {
	mock := &MockBlueskyClient{ctrl: ctrl}
	mock.recorder = &MockBlueskyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlueskyClient) EXPECT() *MockBlueskyClientMockRecorder {
	return m.recorder
}

// GetMyLatestPostsCreatedAsc mocks base method.
func (m *MockBlueskyClient) GetMyLatestPostsCreatedAsc(ctx context.Context, numPosts int64) ([]BlueskyPost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMyLatestPostsCreatedAsc", ctx, numPosts)
	ret0, _ := ret[0].([]BlueskyPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMyLatestPostsCreatedAsc indicates an expected call of GetMyLatestPostsCreatedAsc.
func (mr *MockBlueskyClientMockRecorder) GetMyLatestPostsCreatedAsc(ctx, numPosts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMyLatestPostsCreatedAsc", reflect.TypeOf((*MockBlueskyClient)(nil).GetMyLatestPostsCreatedAsc), ctx, numPosts)
}
